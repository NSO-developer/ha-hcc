volumes:
  NSO1-vol:
  NSO2-vol:
  NSO1-log-vol:
  NSO2-log-vol:

networks:
  node1-net:
    name: ${NET1}
    ipam:
      config:
        - subnet: ${SUBNET1}
  node2-net:
    name: ${NET2}
    ipam:
      config:
        - subnet: ${SUBNET2}

services:
  NODE-1:
    container_name: ${NODE1}
    hostname: ${NODE1}
    extra_hosts:
      - "${NODE2}:${NODE2_IP}"
    networks:
      node1-net:
        ipv4_address: ${NODE1_IP}
    extends:
      file: common-services.yml
      service: NODE
    profiles:
      - nso
    volumes:
      - type: volume
        source: NSO1-vol
        target: /nso
      - type: volume
        source: NSO1-log-vol
        target: /log
    entrypoint: sh
    command: -c 'cp /nso/authorized_keys /home/admin/.ssh/
          && chmod 644 /home/admin/.ssh/authorized_keys
          && chown -Rh admin:ncsadmin /home/admin/.ssh
          && mkdir -p /nso/.ssh
          && chmod 755 /nso/.ssh
          && cp /nso/authorized_keys /nso/.ssh/
          && chmod 644 /nso/.ssh/authorized_keys
          && /usr/sbin/sshd
          && /usr/sbin/rsyslogd
          && ncs-make-package --service-skeleton template --dest /nso/run/packages/dummy-1.0 --build --no-test --root-container dummies dummy
          && sudo ip route delete default
          && sudo ip route add default via ${NODE1_GW} dev eth0
          && mkdir -p /nso/etc /nso/run/cdb /nso/run/rollbacks /nso/run/scripts /nso/run/streams /nso/run/state /nso/run/packages
          && runuser -m -u nso -g nso -- /run-nso.sh'

  NODE-2:
    container_name: ${NODE2}
    hostname: ${NODE2}
    extra_hosts:
      - "${NODE1}:${NODE1_IP}"
    networks:
      node2-net:
        ipv4_address: ${NODE2_IP}
    extends:
      file: common-services.yml
      service: NODE
    profiles:
      - nso
    volumes:
      - type: volume
        source: NSO2-vol
        target: /nso
      - type: volume
        source: NSO2-log-vol
        target: /log
    entrypoint: sh
    command: -c 'cp /nso/authorized_keys /home/admin/.ssh/
      && chmod 644 /home/admin/.ssh/authorized_keys
      && chown -Rh admin:ncsadmin /home/admin/.ssh
      && mkdir -p /nso/.ssh
      && chmod 755 /nso/.ssh
      && cp /nso/authorized_keys /nso/.ssh/
      && chmod 644 /nso/.ssh/authorized_keys
      && /usr/sbin/sshd
      && /usr/sbin/rsyslogd
      && ncs-make-package --service-skeleton template --dest /nso/run/packages/dummy-1.0 --build --no-test --root-container dummies dummy
      && sudo ip route delete default
      && sudo ip route add default via ${NODE2_GW} dev eth0
      && mkdir -p /nso/etc /nso/run/cdb /nso/run/rollbacks /nso/run/scripts /nso/run/streams /nso/run/state /nso/run/packages
      && runuser -m -u nso -g nso -- /run-nso.sh'

  MANAGER:
    image: manager-rule-hcc-l3
    env_file:
      - .env
    build:
      context: .
      dockerfile: manager.Dockerfile
    container_name: manager
    hostname: manager
    network_mode: bridge
    ports:
      - "12024:12024"
    profiles:
      - manager
    command: sh -c "/root/rule-etc/demo_setup.sh
                    && tail -f /dev/null"
    cap_add:
        - NET_ADMIN
        - NET_BROADCAST
        - SYS_ADMIN
    volumes:
      - type: volume
        source: NSO1-vol
        target: /${NODE1}
      - type: volume
        source: NSO2-vol
        target: /${NODE2}
      - type: bind
        source: ./rule-etc
        target: /root/rule-etc
        read_only: true
    healthcheck:
      test: test -f /$NODE2/etc/ncs.crypto_keys
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 10s

